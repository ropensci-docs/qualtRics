[{"path":"https://docs.ropensci.org/qualtRics/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/qualtRics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Julia Silge; Jasper Ginn Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/qualtRics/articles/qualtRics.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to qualtRics","text":"Currently, package contains three core functions: all_surveys() fetches list surveys access Qualtrics. fetch_survey() downloads survey Qualtrics loads R. read_survey() allows read CSV files download manually Qualtrics. also contains number helper functions, including: qualtrics_api_credentials() stores API key base url environment variables. survey_questions() retrieves data frame containing questions question IDs survey; extract_colmap() retrieves similar data frame detailed mapping columns labels. metadata() retrieves metadata survey, questions, survey flow, number responses etc. Note can export surveys , given administration rights.","code":""},{"path":"https://docs.ropensci.org/qualtRics/articles/qualtRics.html","id":"registering-your-qualtrics-credentials","dir":"Articles","previous_headings":"","what":"Registering your Qualtrics credentials","title":"Introduction to qualtRics","text":"two important credentials need authenticate Qualtrics API. API key datacenter-specific base URL. base URL pass qualtRics package look like yourdatacenterid.qualtrics.com, without scheme https://. Qualtrics API documentation explains can find base URL. can store API credentials QUALTRICS_API_KEY QUALTRICS_BASE_URL .Renviron file repeated use across sessions. qualtRics package function help . use function, reload environment (readRenviron(\"~/.Renviron\")) can use credentials without restarting R. NOTE: get error fetching survey like: Request proxied. faster response times, use host instead: xxx.qualtrics.com change QUALTRICS_BASE_URL use suggested host.","code":"library(qualtRics)  qualtrics_api_credentials(api_key = \"<YOUR-QUALTRICS_API_KEY>\",                            base_url = \"<YOUR-QUALTRICS_BASE_URL>\",                           install = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/articles/qualtRics.html","id":"a-simple-qualtrics-workflow","dir":"Articles","previous_headings":"","what":"A simple Qualtrics workflow","title":"Introduction to qualtRics","text":"Qualtrics API credentials stored, can see surveys available . can download data individual surveys (example, perhaps sixth one) directly R.","code":"surveys <- all_surveys() mysurvey <- fetch_survey(surveyID = surveys$id[6],                           verbose = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/articles/qualtRics.html","id":"more-detailed-control","dir":"Articles","previous_headings":"","what":"More detailed control","title":"Introduction to qualtRics","text":"can add date parameters retrieve responses certain dates: Note date time settings may correspond timezone. can find . See “Dates Times” “Instructions” information Qualtrics handles dates times. Keep mind important plan using times / dates cut-points filter data. may also reference response ID; fetch_survey() download responses submitted response: can filter survey specific questions: can store results specific location like: Note surveys stored way saved RDS file rather e.g. CSV. Reading RDS file can done like : can read survey downloaded manually Qualtrics’ website via browser using read_survey(): avoid special characters (mainly periods) header names, read_survey() uses question labels header names. question belonging label added using sjlabelled package. Qualtrics gives names labels automatically, can easily change .","code":"mysurvey <- fetch_survey(surveys$id[4],                          start_date = \"2018-10-01\",                          end_date = \"2018-10-31\",                          label = FALSE) mysurvey <- fetch_survey(surveys$id[4],                          last_response = \"R_3mmovCIeMllvsER\",                          label = FALSE,                          verbose = TRUE) # what are the questions in a certain survey? questions <- survey_questions(surveyID = surveys$id[6])  # download that survey, filtering for only certain questions mysurvey <- fetch_survey(surveyID = surveys$id[6],                          save_dir = tempdir(),                          include_questions = c(\"QID1\", \"QID2\", \"QID3\"),                          verbose = TRUE) mysurvey <- fetch_survey(surveyID = surveys$id[6],                           save_dir = \"/users/Julia/Desktop/\",                           verbose = TRUE) mysurvey <- readRDS(file = \"/users/Julia/Desktop/mysurvey.rds\") mysurvey <- read_survey(\"/users/Julia/Desktop/mysurvey.csv\")"},{"path":"https://docs.ropensci.org/qualtRics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jasper Ginn. Author. Jackson Curtis. Contributor. Shaun Jackson. Contributor. Samuel Kaminsky. Contributor. Eric Knudsen. Contributor. Joseph O'Brien. Author. Daniel Seneca. Contributor. Julia Silge. Author, maintainer. Phoebe Wong. Contributor.","code":""},{"path":"https://docs.ropensci.org/qualtRics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ginn J, O'Brien J, Silge J (2024). qualtRics: Download 'Qualtrics' Survey Data. R package version 3.2.0.9000,  https://github.com/ropensci/qualtRics, https://docs.ropensci.org/qualtRics/.","code":"@Manual{,   title = {qualtRics: Download 'Qualtrics' Survey Data},   author = {Jasper Ginn and Joseph O'Brien and Julia Silge},   year = {2024},   note = {R package version 3.2.0.9000,  https://github.com/ropensci/qualtRics},   url = {https://docs.ropensci.org/qualtRics/}, }"},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"qualtrics","dir":"","previous_headings":"","what":"Download Qualtrics Survey Data","title":"Download Qualtrics Survey Data","text":"Authors: Julia Silge, Joseph O’Brien, Jasper GinnLicense: MIT Qualtrics online survey data collection software platform. Qualtrics used across many domains academia industry online surveys research. users can manually download survey responses Qualtrics browser, importing data R cumbersome. qualtRics R package implements retrieval survey data using Qualtrics API aims reduce pre-processing steps needed analyzing surveys. Currently, package package CRAN offers functionality, included official Qualtrics API documentation. Note institution must support API access must enabled account. Whoever manages Qualtrics account can help . Please refer Qualtrics documentation find API token. authors package affiliated Qualtrics, Qualtrics offer support package. specific information Qualtrics API, can refer official documentation.","code":""},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Qualtrics Survey Data","text":"package can installed CRAN: Alternatively, can install development version remotes package (alternatively, devtools):","code":"install.packages(\"qualtRics\") install.packages(\"remotes\") remotes::install_github(\"ropensci/qualtRics\")"},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"access-your-qualtrics-data","dir":"","previous_headings":"","what":"Access your Qualtrics data","title":"Download Qualtrics Survey Data","text":"Currently, package contains three core functions: all_surveys() fetches list surveys access Qualtrics.  read_survey() allows read CSV files download manually Qualtrics. also contains multiple helper functions, including: qualtrics_api_credentials() stores API key base URL environment variables. survey_questions() retrieves data frame containing questions question IDs survey; extract_colmap() retrieves similar data frame detailed mapping columns labels. metadata() retrieves metadata survey, questions, survey flow, number responses etc. Note can export surveys , given administration rights.","code":""},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"register-your-qualtrics-credentials","dir":"","previous_headings":"","what":"Register your Qualtrics credentials","title":"Download Qualtrics Survey Data","text":"two important credentials need authenticate Qualtrics API. API key datacenter-specific base URL. base URL pass qualtRics package look like yourdatacenterid.qualtrics.com, without scheme https://. Qualtrics API documentation explains can find base URL. can store API credentials QUALTRICS_API_KEY QUALTRICS_BASE_URL .Renviron file repeated use across sessions. qualtRics package function help . use function, reload environment (readRenviron(\"~/.Renviron\")) can use credentials without restarting R.","code":"library(qualtRics)  qualtrics_api_credentials(api_key = \"<YOUR-QUALTRICS_API_KEY>\",                            base_url = \"<YOUR-QUALTRICS_BASE_URL>\",                           install = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"a-simple-qualtrics-workflow","dir":"","previous_headings":"","what":"A simple Qualtrics workflow","title":"Download Qualtrics Survey Data","text":"Qualtrics API credentials stored, can see surveys available . can download data individual surveys (example, perhaps sixth one) directly R. See qualtRics vignette details variable metadata, automatic conversion variables, retrieving responses specific dates specific survey items, .","code":"surveys <- all_surveys() mysurvey <- fetch_survey(surveyID = surveys$id[6],                           verbose = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Download Qualtrics Survey Data","text":"Jason Bryer wrote R package work previous version Qualtrics API QualtricsTools creates automatic reports shiny. qsurvey James Dunham focuses testing review surveys fielding, analysis responses afterward.","code":""},{"path":"https://docs.ropensci.org/qualtRics/index.html","id":"community-guidelines","dir":"","previous_headings":"Related work","what":"Community Guidelines","title":"Download Qualtrics Survey Data","text":"project released Contributor Code Conduct. participating project agree abide terms. Feedback, bug reports (fixes!), feature requests welcome; file issues seek support .","code":""},{"path":"https://docs.ropensci.org/qualtRics/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"Qualtrics [@qualtrics_main] allows users create disseminate online surveys. used researchers analysts field responses purposes (academic) research. users can manually download survey responses Qualtrics, importing data R cumbersome. R package qualtRics [@ginn_qualtrics_2017] focuses retrieval survey data using Qualtrics API aims reduce pre-processing steps needed prepare data analysis. Currently, package package CRAN offers functionality, included official Qualtrics API documentation [@noauthor_getting_nodate]. primary goal package provide bridge Qualtrics user interface (survey designed) R (results can analyzed) using steps possible. Users can store API credentials file R project root directory automatically loads library called. eliminates need remember API credentials prevents user accidentally sharing sensitive information share work. package contains three core functions retrieve survey data. first functions - getSurveys() - retrieves data frame containing overview surveys user access. Using unique survey id, user can download import data using getSurvey(). function takes care requesting, downloading unpacking data. imported R readSurvey() function. last function can also used import manual data exports supports current legacy data formats. Apart functionality, package supports automatic conversion single-choice multiple choice questions. Using rich metadata Qualtrics provides surveys, possible automatically convert ordinal data ordered factors. functionality expanded ongoing basis include variable types.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/reference/all_mailinglists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame of all mailing lists from Qualtrics — all_mailinglists","title":"Retrieve a data frame of all mailing lists from Qualtrics — all_mailinglists","text":"Retrieve data frame mailing lists Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/all_mailinglists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame of all mailing lists from Qualtrics — all_mailinglists","text":"","code":"all_mailinglists()"},{"path":"https://docs.ropensci.org/qualtRics/reference/all_mailinglists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a data frame of all mailing lists from Qualtrics — all_mailinglists","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/all_mailinglists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a data frame of all mailing lists from Qualtrics — all_mailinglists","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of all mailing lists mailinglists <- all_mailinglists() }"},{"path":"https://docs.ropensci.org/qualtRics/reference/all_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame of all active surveys on Qualtrics — all_surveys","title":"Retrieve a data frame of all active surveys on Qualtrics — all_surveys","text":"Retrieve data frame active surveys Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/all_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame of all active surveys on Qualtrics — all_surveys","text":"","code":"all_surveys()"},{"path":"https://docs.ropensci.org/qualtRics/reference/all_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a data frame of all active surveys on Qualtrics — all_surveys","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/reference/all_surveys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a data frame of all active surveys on Qualtrics — all_surveys","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of all surveys surveys <- all_surveys()  # Retrieve a single survey mysurvey <- fetch_survey(surveyID = surveys$id[6])  mysurvey <- fetch_survey(   surveyID = surveys$id[6],   save_dir = tempdir(),   start_date = \"2018-01-01\",   end_date = \"2018-01-31\",   limit = 100,   label = TRUE,   unanswer_recode = \"UNANS\",   verbose = TRUE ) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/check_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"General check that credentials are present — check_credentials","title":"General check that credentials are present — check_credentials","text":"General check credentials present","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/check_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General check that credentials are present — check_credentials","text":"","code":"check_credentials()"},{"path":"https://docs.ropensci.org/qualtRics/reference/check_existing_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if downloaded file already exists — check_existing_download","title":"Check if downloaded file already exists — check_existing_download","text":"Check downloaded file already exists","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/check_existing_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if downloaded file already exists — check_existing_download","text":"","code":"check_existing_download(file_location, surveyID, verbose = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/check_existing_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if downloaded file already exists — check_existing_download","text":"file_location (potential) path previous download surveyID Qualtrics survey ID verbose whether report match found","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/check_for_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if httr GET result contains a warning — check_for_warnings","title":"Check if httr GET result contains a warning — check_for_warnings","text":"Check httr GET result contains warning","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/check_for_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if httr GET result contains a warning — check_for_warnings","text":"","code":"check_for_warnings(resp)"},{"path":"https://docs.ropensci.org/qualtRics/reference/check_for_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if httr GET result contains a warning — check_for_warnings","text":"resp object returned qualtrics_response_codes()","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_base_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking and re-formatting base_url: — checkarg_base_url","title":"Checking and re-formatting base_url: — checkarg_base_url","text":"Checking re-formatting base_url:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_base_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking and re-formatting base_url: — checkarg_base_url","text":"","code":"checkarg_base_url(base_url)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"col_types must be a col_spec object from readr — checkarg_col_types","title":"col_types must be a col_spec object from readr — checkarg_col_types","text":"col_types must col_spec object readr","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"col_types must be a col_spec object from readr — checkarg_col_types","text":"","code":"checkarg_col_types(col_types)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_convert_label_breakouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check conditions around combinations of convert, label, and breakout_sets — checkarg_convert_label_breakouts","title":"Check conditions around combinations of convert, label, and breakout_sets — checkarg_convert_label_breakouts","text":"Check conditions around combinations convert, label, breakout_sets","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_convert_label_breakouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check conditions around combinations of convert, label, and breakout_sets — checkarg_convert_label_breakouts","text":"","code":"checkarg_convert_label_breakouts(convert, label, breakout_sets)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Check date-time-like inputs and convert them to ISO8601 (with time\nzone) — checkarg_datetime","title":"Title Check date-time-like inputs and convert them to ISO8601 (with time\nzone) — checkarg_datetime","text":"Title Check date-time-like inputs convert ISO8601 (time zone)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Check date-time-like inputs and convert them to ISO8601 (with time\nzone) — checkarg_datetime","text":"","code":"checkarg_datetime(date_arg, time_zone = NULL, endofday = FALSE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Check date-time-like inputs and convert them to ISO8601 (with time\nzone) — checkarg_datetime","text":"date_arg Date, POSIX(c/l)t date/time, parseable string YYYY(/-)MM(/-)DD format, optionally space HH:MM:SS 24 hour time.  Intended converted ISO8601 string use Qualtrics API call time_zone Optional arg time zone specification, defaults system local timezone. endofday Boolean. TRUE, entry time information (date), result 23:59:59 (end day) versus implicit 00:00:00 (start).  Intended , e.g., 'end_date' argument fetch_survey(). allows intuitive expectation entering end_date = 2022/05/05 includes rather excludes cases 05/05 .","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Check date-time-like inputs and convert them to ISO8601 (with time\nzone) — checkarg_datetime","text":"single string date/time formatted ISO8601","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if elements given in fetch_description are properly specified — checkarg_elements","title":"Check if elements given in fetch_description are properly specified — checkarg_elements","text":"Check elements given fetch_description properly specified","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if elements given in fetch_description are properly specified — checkarg_elements","text":"","code":"checkarg_elements(elements)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_fetch_id_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data for fetch_id() is correct — checkarg_fetch_id_data","title":"Check if data for fetch_id() is correct — checkarg_fetch_id_data","text":"Check data fetch_id() correct","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_fetch_id_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data for fetch_id() is correct — checkarg_fetch_id_data","text":"","code":"checkarg_fetch_id_data(.data)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if survey file specified in file_name exists — checkarg_file_name","title":"Check if survey file specified in file_name exists — checkarg_file_name","text":"Check survey file specified file_name exists","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if survey file specified in file_name exists — checkarg_file_name","text":"","code":"checkarg_file_name(file_name)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if elements given in metadata's 'get' are properly specified — checkarg_get","title":"Check if elements given in metadata's 'get' are properly specified — checkarg_get","text":"Check elements given metadata's 'get' properly specified","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if elements given in metadata's 'get' are properly specified — checkarg_get","text":"","code":"checkarg_get(get)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_embedded.html","id":null,"dir":"Reference","previous_headings":"","what":"Check include_embedded and format for API call: — checkarg_include_embedded","title":"Check include_embedded and format for API call: — checkarg_include_embedded","text":"Check include_embedded format API call:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_embedded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check include_embedded and format for API call: — checkarg_include_embedded","text":"","code":"checkarg_include_embedded(include_embedded)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that include_metadata has the right elements & format for API call — checkarg_include_metadata","title":"Check that include_metadata has the right elements & format for API call — checkarg_include_metadata","text":"Check include_metadata right elements & format API call","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that include_metadata has the right elements & format for API call — checkarg_include_metadata","text":"","code":"checkarg_include_metadata(include_metadata)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that include_questions uses the QID format, and format for API call: — checkarg_include_questions","title":"Check that include_questions uses the QID format, and format for API call: — checkarg_include_questions","text":"Check include_questions uses QID format, format API call:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_include_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that include_questions uses the QID format, and format for API call: — checkarg_include_questions","text":"","code":"checkarg_include_questions(include_questions)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isboolean.html","id":null,"dir":"Reference","previous_headings":"","what":"Is boolean (length-1 logical) — checkarg_isboolean","title":"Is boolean (length-1 logical) — checkarg_isboolean","text":"boolean (length-1 logical)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isboolean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is boolean (length-1 logical) — checkarg_isboolean","text":"","code":"checkarg_isboolean(arg)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_ischaracter.html","id":null,"dir":"Reference","previous_headings":"","what":"Is character vector with no missing values: — checkarg_ischaracter","title":"Is character vector with no missing values: — checkarg_ischaracter","text":"character vector missing values:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_ischaracter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is character vector with no missing values: — checkarg_ischaracter","text":"","code":"checkarg_ischaracter(arg, null_okay = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isintegerish.html","id":null,"dir":"Reference","previous_headings":"","what":"Is integerish (length-1 numeric w/o any fractional component) — checkarg_isintegerish","title":"Is integerish (length-1 numeric w/o any fractional component) — checkarg_isintegerish","text":"integerish (length-1 numeric w/o fractional component)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isintegerish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is integerish (length-1 numeric w/o any fractional component) — checkarg_isintegerish","text":"","code":"checkarg_isintegerish(arg, null_okay = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isstring.html","id":null,"dir":"Reference","previous_headings":"","what":"Is string (length-1 character) — checkarg_isstring","title":"Is string (length-1 character) — checkarg_isstring","text":"string (length-1 character)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_isstring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is string (length-1 character) — checkarg_isstring","text":"","code":"checkarg_isstring(arg, null_okay = TRUE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Check limit for being integer >= 1: — checkarg_limit","title":"Check limit for being integer >= 1: — checkarg_limit","text":"Check limit integer >= 1:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check limit for being integer >= 1: — checkarg_limit","text":"","code":"checkarg_limit(limit)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_tempdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the temporary directory exists: — checkarg_tempdir","title":"Check if the temporary directory exists: — checkarg_tempdir","text":"Check temporary directory exists:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_tempdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the temporary directory exists: — checkarg_tempdir","text":"","code":"checkarg_tempdir(tmp_dir)"},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_time_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks time zone, setting default if needed: — checkarg_time_zone","title":"Checks time zone, setting default if needed: — checkarg_time_zone","text":"Checks time zone, setting default needed:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/checkarg_time_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks time zone, setting default if needed: — checkarg_time_zone","text":"","code":"checkarg_time_zone(time_zone)"},{"path":"https://docs.ropensci.org/qualtRics/reference/column_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame containing survey column mapping — column_map","title":"Retrieve a data frame containing survey column mapping — column_map","text":"Retrieve data frame containing survey column mapping","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/column_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame containing survey column mapping — column_map","text":"","code":"column_map(surveyID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/column_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a data frame containing survey column mapping — column_map","text":"surveyID string. Unique ID survey want download. Returned id all_surveys function.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/column_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a data frame containing survey column mapping — column_map","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/reference/column_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a data frame containing survey column mapping — column_map","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Retrieve column mapping for a survey mapping <- column_map(surveyID = surveys$id[6])  # Retrieve a single survey, filtering for specific questions mysurvey <- fetch_survey(   surveyID = surveys$id[6],   save_dir = tempdir(),   include_questions = c(\"QID1\", \"QID2\", \"QID3\"),   verbose = TRUE ) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/construct_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a header to send to Qualtrics API — construct_header","title":"Construct a header to send to Qualtrics API — construct_header","text":"Construct header send Qualtrics API","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/construct_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a header to send to Qualtrics API — construct_header","text":"","code":"construct_header(API_TOKEN)"},{"path":"https://docs.ropensci.org/qualtRics/reference/construct_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a header to send to Qualtrics API — construct_header","text":"API_TOKEN API token. Available Qualtrics account (see: https://api.qualtrics.com/)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/create_raw_payload.html","id":null,"dir":"Reference","previous_headings":"","what":"Create properly-formatted JSON payload for API calls.  Removes NULLS — create_raw_payload","title":"Create properly-formatted JSON payload for API calls.  Removes NULLS — create_raw_payload","text":"Create properly-formatted JSON payload API calls.  Removes NULLS","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/create_raw_payload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create properly-formatted JSON payload for API calls.  Removes NULLS — create_raw_payload","text":"","code":"create_raw_payload(...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/create_raw_payload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create properly-formatted JSON payload for API calls.  Removes NULLS — create_raw_payload","text":"JSON file options send API","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_filedownload.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads response data from location obtained from\nfetch_survey_progress (extracting from .zip file) — export_responses_filedownload","title":"Downloads response data from location obtained from\nfetch_survey_progress (extracting from .zip file) — export_responses_filedownload","text":"Downloads response data location obtained fetch_survey_progress (extracting .zip file)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_filedownload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads response data from location obtained from\nfetch_survey_progress (extracting from .zip file) — export_responses_filedownload","text":"","code":"export_responses_filedownload(surveyID, fileID, tmp_dir)"},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_filedownload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads response data from location obtained from\nfetch_survey_progress (extracting from .zip file) — export_responses_filedownload","text":"surveyID survey ID fileID file ID fetch_survey_progress tmp_dir temporary directory use","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate a request to the export-responses API endpoint — export_responses_init","title":"Initiate a request to the export-responses API endpoint — export_responses_init","text":"Initiate request export-responses API endpoint","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate a request to the export-responses API endpoint — export_responses_init","text":"","code":"export_responses_init(surveyID, body)"},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate a request to the export-responses API endpoint — export_responses_init","text":"surveyID ID survey whose responses pulled","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate a request to the export-responses API endpoint — export_responses_init","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor progress from response request download, then obtain file download\nlocation — export_responses_progress","title":"Monitor progress from response request download, then obtain file download\nlocation — export_responses_progress","text":"Monitor progress response request download, obtain file download location","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor progress from response request download, then obtain file download\nlocation — export_responses_progress","text":"","code":"export_responses_progress(surveyID, requestID, verbose = FALSE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitor progress from response request download, then obtain file download\nlocation — export_responses_progress","text":"surveyID ID survey whose responses pulled requestID exportProgressId https://api.qualtrics.com/37e6a66f74ab4-get-response-export-progress verbose See fetch_survey()","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monitor progress from response request download, then obtain file download\nlocation — export_responses_progress","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs 3-part request to export-responses endpoint,\ndownloading and unzipping file — export_responses_request","title":"Runs 3-part request to export-responses endpoint,\ndownloading and unzipping file — export_responses_request","text":"Runs 3-part request export-responses endpoint, downloading unzipping file","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs 3-part request to export-responses endpoint,\ndownloading and unzipping file — export_responses_request","text":"","code":"export_responses_request(surveyID, body, verbose = TRUE, tmp_dir)"},{"path":"https://docs.ropensci.org/qualtRics/reference/export_responses_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs 3-part request to export-responses endpoint,\ndownloading and unzipping file — export_responses_request","text":"surveyID ID survey downloaded body payload/body API request containing desired params verbose give verbose response tmp_dir temporary directory zip file","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/extract_colmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract column map from survey data download — extract_colmap","title":"Extract column map from survey data download — extract_colmap","text":"Helper function extract column map attached response data download obtained fetch_survey() (using default add_column_map = TRUE)","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/extract_colmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract column map from survey data download — extract_colmap","text":"","code":"extract_colmap(respdata)"},{"path":"https://docs.ropensci.org/qualtRics/reference/extract_colmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract column map from survey data download — extract_colmap","text":"respdata Response data including column map dataframe attribute","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/extract_colmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract column map from survey data download — extract_colmap","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/extract_colmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract column map from survey data download — extract_colmap","text":"","code":"if (FALSE) { # Retrieve a list of surveys surveys <- all_surveys()  # Retrieve a single survey mysurvey <- fetch_survey(surveyID = surveys$id[6])  # Extract column mapping for survey extract_colmap(mysurvey) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Download complete survey description using the Qualtrics v3 ","title":"Download complete survey description using the Qualtrics v3 ","text":"Download complete survey description using Qualtrics v3 \"Get Survey\" API endpoint.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download complete survey description using the Qualtrics v3 ","text":"","code":"fetch_description(surveyID, elements = NULL, legacy = FALSE, ...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download complete survey description using the Qualtrics v3 ","text":"surveyID string. Unique ID survey want download. Returned \"id\" all_surveys function. elements character vector. Lists elements survey definition maintained.  Possible elements \"metadata\", \"surveyoptions\", \"flow\", \"blocks\", \"questions\", \"responsesets\", /\"scoring\" (case-insensitive). legacy = TRUE, possible elements \"metadata\", \"questions\", \"responsecounts\", \"blocks\", \"flow\", \"embedded_data\", /\"comments\". legacy Logical.  TRUE, use older Get Survey API endpoint via call legacy function metadata. ... Additional options, used legacy = TRUE. User may pass argument called questions, vector containing names questions want return metadata.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download complete survey description using the Qualtrics v3 ","text":"list containing survey description metadata. contents returned list depend elements.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download complete survey description using the Qualtrics v3 ","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download complete survey description using the Qualtrics v3 ","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Get description for a survey descrip <- fetch_description(surveyID = surveys$id[6])  # Get metadata with specific elements descrip_specific <- fetch_description(   surveyID = id,   elements = c(\"questions\", \"flow\") )  }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distribution_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","title":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","text":"Download distribution history data distribution Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distribution_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","text":"","code":"fetch_distribution_history(distributionID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distribution_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","text":"distributionID String. Unique distribution ID distribution history want download.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distribution_history.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distribution_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download distribution history data for a distribution from Qualtrics — fetch_distribution_history","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  surveys <- all_surveys() distributions <- fetch_distributions(surveys$id[1]) distribution_history <- fetch_distribution_history(distributions$id[1]) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Download distribution data for a survey from Qualtrics — fetch_distributions","title":"Download distribution data for a survey from Qualtrics — fetch_distributions","text":"Download distribution data survey Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download distribution data for a survey from Qualtrics — fetch_distributions","text":"","code":"fetch_distributions(surveyID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download distribution data for a survey from Qualtrics — fetch_distributions","text":"surveyID String. Unique survey ID distribution data want download.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download distribution data for a survey from Qualtrics — fetch_distributions","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download distribution data for a survey from Qualtrics — fetch_distributions","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  surveys <- all_surveys() distributions <- fetch_distributions(surveys$id[1]) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","title":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","text":"Fetch unique Qualtrics survey ID based survey name Qualtrics UI","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","text":"","code":"fetch_id(.data, survey_name, partial_match = FALSE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","text":".data Data frame active surveys created function all_surveys(). survey_name String. Name survey appears Qualtrics UI. Must unique passed fetch_id(). partial_match Boolean. match surveys containing exact string provided.  Defaults FALSE, matches entire name.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","text":"Survey names Qualtrics platform required unique, survey_name argument function must unique. input results multiple surveys matched, error list 5 matches & IDs","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch a unique Qualtrics survey ID based on survey name in the Qualtrics UI — fetch_id","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Retrieve surveyID for a unique survey my_id <- fetch_id(surveys, \"Unique Survey Name\")  }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_mailinglist.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a mailing list from Qualtrics — fetch_mailinglist","title":"Download a mailing list from Qualtrics — fetch_mailinglist","text":"Download mailing list Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_mailinglist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a mailing list from Qualtrics — fetch_mailinglist","text":"","code":"fetch_mailinglist(mailinglistID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_mailinglist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a mailing list from Qualtrics — fetch_mailinglist","text":"mailinglistID String. Unique ID mailing list want download. Returned id all_mailinglists function.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_mailinglist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download a mailing list from Qualtrics — fetch_mailinglist","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_mailinglist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a mailing list from Qualtrics — fetch_mailinglist","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of all mailing lists mailinglists <- all_mailinglists()  # Retrieve a single mailing list mailinglist <- fetch_mailinglist(mailinglists$id[1]) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a survey and import it into R — fetch_survey","title":"Download a survey and import it into R — fetch_survey","text":"Download Qualtrics survey via API import survey directly R.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a survey and import it into R — fetch_survey","text":"","code":"fetch_survey(   surveyID,   limit = NULL,   start_date = NULL,   end_date = NULL,   time_zone = NULL,   include_display_order = TRUE,   include_metadata = NULL,   include_questions = NULL,   include_embedded = NULL,   unanswer_recode = NULL,   unanswer_recode_multi = unanswer_recode,   breakout_sets = TRUE,   import_id = FALSE,   label = TRUE,   convert = TRUE,   add_column_map = TRUE,   add_var_labels = TRUE,   strip_html = TRUE,   col_types = NULL,   verbose = TRUE,   tmp_dir = tempdir(),   last_response = deprecated(),   force_request = deprecated(),   save_dir = deprecated() )"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a survey and import it into R — fetch_survey","text":"surveyID String. Unique ID survey want download. Returned id all_surveys function. limit Integer. Maximum number responses exported. Defaults NULL (download responses). start_date, end_date POSIXct, POSIXlt, Date object, length-1 string equivalent form \"YYYY-MM-DD\" \"YYYY-MM-DD HH:MM:SS\". (\"/\" also acceptable place \"-\".)  export survey responses recorded within range specified one arguments (.e. referencing RecordedDate). defaults NULL (unbounded).  See Details important information package Qualtrics' handling start/end times. time_zone String. Time zone use date/time metadata variables response dataframe (e.g. StartDate). Must match time zone name base::OlsonNames(). Defaults NULL, uses current system timezone (base::Sys.timezone()).  Also applied arguments start_date /expiration_date given Date string objects (see ); ignored arguments given POSIXlt/POSIXct objects. include_display_order Logical.  TRUE, download surveys using block/question/answer display randomization include contain additional variables indicating randomization pattern used case. Defaults FALSE. include_metadata, include_questions, include_embedded Character vector. Specify variables include download.  Defaults NULL (keep ). NA character() excludes variables category. See Details using inclusion argument. unanswer_recode Integer-like. Recode seen--unanswered (usually skipped) questions using value. Defaults NA unanswer_recode_multi Integer-like. Recode seen--unanswered multi-select questions (checkboxes) using value. Defaults value unaswer_recode. breakout_sets Logical. TRUE multi-value fields (e.g. option multi-select multiple choice questions) returned separate columns.  FALSE, returned 1 column element containing values. import_id Logical. TRUE, column names use Qualtrics import IDs (e.g. \"QID123\") instead user-modifiable names (e.g. default names like \"Q3\" custom names).  Defaults FALSE (user-modifiable names). Note also affects (otherwise unmodifiable) names metadata columns--see \"include_metadata\" section Details . label Logical. TRUE (default), return text answer choices, instead recoded values (FALSE). convert Logical. TRUE, fetch_survey() function convert certain question types (e.g. multiple choice) proper data type R. Defaults TRUE. add_column_map Logical. Add attribute returned response data frame containing metadata associated response download, including variable names, question/choice text, Qualtrics import IDs. column map can subsequently obtained using extract_colmap() Defaults TRUE. add_var_labels Logical. TRUE, item description variable (equivalent one column map) added \"label\" attribute using sjlabelled::set_label(). Useful reference well cross-compatibility stats packages (e.g., Stata, see documentation sjlabelled). Defaults TRUE. strip_html Logical. TRUE, remove HTML tags variable descriptions. Defaults TRUE.  Ignored  add_column_map add_var_labels FALSE. col_types Optional. argument provides way manually overwrite column types may incorrectly guessed. Takes readr::cols() specification. See example readr::cols() formatting details. Defaults NULL. Overwritten convert = TRUE. verbose Logical. TRUE, verbose messages printed R console. Defaults TRUE. tmp_dir Path filesystem directory. Qualtrics returns response data compressed (zip) form. extract raw data, zip file must briefly written disk (file promptly deleted). default, system's temporary directory used (see tempdir()), users needing control can specify alternate location . last_response Deprecated. force_request Deprecated. save_dir Deprecated.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download a survey and import it into R — fetch_survey","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"start-date-amp-end-date-arguments","dir":"Reference","previous_headings":"","what":"start_date & end_date arguments","title":"Download a survey and import it into R — fetch_survey","text":"Qualtrics API endpoint function treats start_date end_date slightly differently; end_date exclusive, meaning responses recorded moment specified end_date returned.  permits easier automation; previously-used end_date can become start_date subsequent request without downloading duplicate records. convenience users working interactively, qualtRics package also accepts Date(-like) input argument, used implies time 00:00:00 given date (time zone). Date(-like) passed end_date, however, date incremented one making API request. adjustment intended provide interactive users intuitive results; example, specifying \"2022/06/02\" start_date end_date return responses day, (instead zero responses return end_date adjusted).","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"inclusion-exclusion-arguments","dir":"Reference","previous_headings":"","what":"Inclusion/exclusion arguments","title":"Download a survey and import it into R — fetch_survey","text":"three include_* arguments different requirements:","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"include-metadata","dir":"Reference","previous_headings":"","what":"include_metadata","title":"Download a survey and import it into R — fetch_survey","text":"Elements must one 17 Qualtrics metadata variables, listed default order: StartDate (startDate), EndDate (endDate), Status (status), IPAddress (ipAddress), Progress (progress), Duration (seconds) (duration), Finished (finished), RecordedDate (recordedDate), ResponseId (_recordId), RecipientLastName (recipientLastName), RecipientFirstName (recipientFirstName), RecipientEmail (recipientEmail), ExternalReference (externalDataReference), LocationLatitude (locationLatitude), LocationLongitude (locationLongitude), DistributionChannel (distributionChannel), UserLanguage (userLanguage). Names parentheses returned API endpoint import_id set TRUE. argument include_metadata can accept either format regardless import_id setting, names case-sensitive. Duplicate elements passed include_metadata silently dropped, de-duplicated variable located first position.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"include-questions","dir":"Reference","previous_headings":"","what":"include_questions","title":"Download a survey and import it into R — fetch_survey","text":"Qualtrics uniquely identifies question internal ID takes form \"QID\" followed number, e.g. QID5.  using include_questions, internal IDs must used rather user-customizable variable names (need unique Qualtrics).  needed, column map linking customizable names QID's can quickly obtained calling:   Note one QID \"question\" Qualtrics sense, QID may still map multiple columns returned data frame. , example, \"question\" ID QID5 multiple-choice item text box added third choice, returned data frame may two related columns: \"QID5\"  multiple choice selection, \"QID5_3_TEXT\" text box (, typically, custom names). Setting include_questions = \"QID5\" always return columns. Similarly, \"matrix\" style multiple-choice questions column separate row matrix. Also, include_display_order = TRUE, display ordering variables randomization included. Currently, separating sub-questions via API appear possible (e.g., include_questions = \"QID5_3_TEXT\" result API error).","code":"my_survey <- fetch_survey(     surveyID = {survey ID},     limit = 1,     add_column_map = TRUE ) extract_colmap(my_survey)"},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"include-embedded","dir":"Reference","previous_headings":"","what":"include_embedded","title":"Download a survey and import it into R — fetch_survey","text":"argument accepts user-specified names embedded data variables survey accessed.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/reference/fetch_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a survey and import it into R — fetch_survey","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Retrieve a single survey my_survey <- fetch_survey(surveyID = surveys$id[6])  my_survey <- fetch_survey(   surveyID = surveys$id[6],   start_date = \"2018-01-01\",   end_date = \"2018-01-31\",   limit = 100,   label = TRUE,   unanswer_recode = 999,   verbose = TRUE,   # Manually override EndDate to be a character vector   col_types = readr::cols(EndDate = readr::col_character()) )  }"},{"path":"https://docs.ropensci.org/qualtRics/reference/generate_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate URL for specific API query by type and (if appropriate) ID — generate_url","title":"Generate URL for specific API query by type and (if appropriate) ID — generate_url","text":"Generate URL specific API query type (appropriate) ID","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/generate_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate URL for specific API query by type and (if appropriate) ID — generate_url","text":"","code":"generate_url(query, ...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/generate_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate URL for specific API query by type and (if appropriate) ID — generate_url","text":"query string.  specific API query desired.  Generally named associated functions without underscores, request fetch_survey() \"fetchsurvey\". ... Named elements URL specific query desired, surveyID mailinglistID","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/generate_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate URL for specific API query by type and (if appropriate) ID — generate_url","text":"Endpoint URL passed querying tools","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurvey.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a survey and import it into R — getSurvey","title":"Download a survey and import it into R — getSurvey","text":"function deprecated; use fetch_survey() instead.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurvey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a survey and import it into R — getSurvey","text":"","code":"getSurvey(...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurvey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a survey and import it into R — getSurvey","text":"... arguments fetch_survey","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurveyQuestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame containing question IDs and labels — getSurveyQuestions","title":"Retrieve a data frame containing question IDs and labels — getSurveyQuestions","text":"function deprecated; use survey_questions() instead.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurveyQuestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame containing question IDs and labels — getSurveyQuestions","text":"","code":"getSurveyQuestions(...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurveyQuestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a data frame containing question IDs and labels — getSurveyQuestions","text":"... arguments survey_questions","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame of all active surveys on Qualtrics — getSurveys","title":"Retrieve a data frame of all active surveys on Qualtrics — getSurveys","text":"function deprecated; use all_surveys() instead.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/getSurveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame of all active surveys on Qualtrics — getSurveys","text":"","code":"getSurveys()"},{"path":"https://docs.ropensci.org/qualtRics/reference/infer_data_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Set proper data types on survey data. — infer_data_types","title":"Set proper data types on survey data. — infer_data_types","text":"Set proper data types survey data.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/infer_data_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set proper data types on survey data. — infer_data_types","text":"","code":"infer_data_types(data, surveyID, verbose = FALSE)"},{"path":"https://docs.ropensci.org/qualtRics/reference/infer_data_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set proper data types on survey data. — infer_data_types","text":"data Imported Qualtrics survey surveyID ID survey verbose Flag","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/list_distribution_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Download distribution links for a distribution from Qualtrics — list_distribution_links","title":"Download distribution links for a distribution from Qualtrics — list_distribution_links","text":"Download distribution links distribution Qualtrics","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/list_distribution_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download distribution links for a distribution from Qualtrics — list_distribution_links","text":"","code":"list_distribution_links(distributionID, surveyID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/list_distribution_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download distribution links for a distribution from Qualtrics — list_distribution_links","text":"distributionID String. Unique distribution ID distribution links want download. surveyID String. Unique ID survey want download.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/list_distribution_links.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download distribution links for a distribution from Qualtrics — list_distribution_links","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/list_distribution_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download distribution links for a distribution from Qualtrics — list_distribution_links","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  surveys <- all_surveys() distributions <- fetch_distributions(surveys$id[1]) distribution_links <- list_distribution_links(distributions$id[1], surveyID = surveys$id[1]) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download metadata for a survey — metadata","title":"Download metadata for a survey — metadata","text":"Using function, can retrieve metadata survey. information includes question metadata (type, options, choices, etc), number responses, general metadata, survey flow, etc.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download metadata for a survey — metadata","text":"","code":"metadata(surveyID, get = NULL, questions = NULL)"},{"path":"https://docs.ropensci.org/qualtRics/reference/metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download metadata for a survey — metadata","text":"surveyID string. Unique ID survey want download. Returned \"id\" all_surveys function. get character vector containing following: \"metadata\", \"questions\", \"responsecounts\", \"blocks\", \"flow\", \"embedded_data\", \"comments\". return included elements. default, function returns \"metadata\", \"questions\", \"responsecounts\" elements. See examples information. questions Character vector containing names questions want return metadata.  Defaults NULL (questions).","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download metadata for a survey — metadata","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download metadata for a survey — metadata","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Get metadata for a survey md <- metadata(surveyID = surveys$id[6])  # Get metadata with specific elements md_specific <- metadata(   surveyID = id,   get = c(\"flow\") )  # Get specific question metadata question_specific <- metadata(   surveyID = id,   get = c(\"questions\"),   questions = c(\"Q1\", \"Q2\") )  # Example of a metadata file file <- system.file(\"extdata\", \"metadata.rds\", package = \"qualtRics\")  # Load metadata_ex <- readRDS(file = file) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtRicsConfigFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an Example of a QualtRics Configuration File to the Console. — qualtRicsConfigFile","title":"Prints an Example of a QualtRics Configuration File to the Console. — qualtRicsConfigFile","text":"function deprecated; use qualtrics_api_credentials() instead.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtRicsConfigFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an Example of a QualtRics Configuration File to the Console. — qualtRicsConfigFile","text":"","code":"qualtRicsConfigFile(...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtRicsConfigFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an Example of a QualtRics Configuration File to the Console. — qualtRicsConfigFile","text":"... arguments qualtRicsConfigFile","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtRicsConfigFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints an Example of a QualtRics Configuration File to the Console. — qualtRicsConfigFile","text":"","code":"if (FALSE) { # Execute this line to get instructions on how to make a .qualtrics.yml config file. qualtRicsConfigFile() }"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Qualtrics credentials in your .Renviron file for repeated use — qualtrics_api_credentials","title":"Install Qualtrics credentials in your .Renviron file for repeated use — qualtrics_api_credentials","text":"function adds Qualtrics API key base URL .Renviron file can called securely without stored code. installed two credentials, can called time Sys.getenv(\"QUALTRICS_API_KEY\") Sys.getenv(\"QUALTRICS_BASE_URL\"). .Renviron file, function create one . already .Renviron file, function append key existing file, making backup original file disaster recovery purposes.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Qualtrics credentials in your .Renviron file for repeated use — qualtrics_api_credentials","text":"","code":"qualtrics_api_credentials(   api_key,   base_url,   overwrite = FALSE,   install = FALSE,   report = FALSE )"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Qualtrics credentials in your .Renviron file for repeated use — qualtrics_api_credentials","text":"api_key API key provided Qualtrics formatted quotes. Learn Qualtrics API keys https://api.qualtrics.com/ base_url institution-specific base URL Qualtrics account, formatted quotes, without protocol (include https://). Find base URL https://api.qualtrics.com/ overwrite TRUE, overwrite existing Qualtrics credentials already .Renviron file. install TRUE, install key .Renviron file use future sessions.  Defaults FALSE (single session use). report TRUE, ignores arguments outputs credentials 2-element named vector.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install Qualtrics credentials in your .Renviron file for repeated use — qualtrics_api_credentials","text":"","code":"if (FALSE) { qualtrics_api_credentials(   api_key = \"<YOUR-QUALTRICS_API_KEY>\",   base_url = \"<YOUR-QUALTRICS_BASE_URL>\",   install = TRUE ) # Reload your environment so you can use the credentials without restarting R readRenviron(\"~/.Renviron\") # You can check it with: Sys.getenv(\"QUALTRICS_API_KEY\")  # If you need to overwrite existing credentials: qualtrics_api_credentials(   api_key = \"<YOUR-QUALTRICS_API_KEY>\",   base_url = \"<YOUR-QUALTRICS_BASE_URL>\",   overwrite = TRUE,   install = TRUE ) # Reload your environment to use the credentials }"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Send httr requests to Qualtrics API — qualtrics_api_request","title":"Send httr requests to Qualtrics API — qualtrics_api_request","text":"Send httr requests Qualtrics API","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send httr requests to Qualtrics API — qualtrics_api_request","text":"","code":"qualtrics_api_request(   verb = c(\"GET\", \"POST\"),   url = url,   query = NULL,   body = NULL,   as = c(\"parsed\", \"raw\"),   ... )"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send httr requests to Qualtrics API — qualtrics_api_request","text":"verb Type request sent (@seealso httr::VERB()) url Qualtrics endpoint URL created generate_url() functions query Optional query parameters used endpoints body Options created create_raw_payload() function type content return, passed httr::content(). current options \"parsed\" (since get JSON mostly), \"raw\" (response .zips) ... arguments passed httr::content parsing","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_api_request.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Send httr requests to Qualtrics API — qualtrics_api_request","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_response_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks responses against Qualtrics response codes and returns error message. — qualtrics_response_codes","title":"Checks responses against Qualtrics response codes and returns error message. — qualtrics_response_codes","text":"Checks responses Qualtrics response codes returns error message.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_response_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks responses against Qualtrics response codes and returns error message. — qualtrics_response_codes","text":"","code":"qualtrics_response_codes(res)"},{"path":"https://docs.ropensci.org/qualtRics/reference/qualtrics_response_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks responses against Qualtrics response codes and returns error message. — qualtrics_response_codes","text":"res results object httr","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/readSurvey.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV file exported from Qualtrics — readSurvey","title":"Read a CSV file exported from Qualtrics — readSurvey","text":"function deprecated; use read_survey() instead. Reads comma separated CSV files generated Qualtrics software. second line containing variable labels imported. Repetitive introductions matrix questions automatically removed. Variable labels stored attributes.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/readSurvey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV file exported from Qualtrics — readSurvey","text":"","code":"readSurvey(...)"},{"path":"https://docs.ropensci.org/qualtRics/reference/readSurvey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV file exported from Qualtrics — readSurvey","text":"... arguments read_survey()","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/read_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV file exported from Qualtrics — read_survey","title":"Read a CSV file exported from Qualtrics — read_survey","text":"Reads comma separated CSV files generated Qualtrics software. second line containing variable labels imported. Repetitive introductions matrix questions automatically removed. Variable labels stored attributes.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/read_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV file exported from Qualtrics — read_survey","text":"","code":"read_survey(   file_name,   strip_html = TRUE,   import_id = FALSE,   time_zone = NULL,   legacy = FALSE,   add_column_map = TRUE,   add_var_labels = TRUE,   col_types = NULL )"},{"path":"https://docs.ropensci.org/qualtRics/reference/read_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV file exported from Qualtrics — read_survey","text":"file_name String. CSV data file. strip_html Logical. TRUE, remove HTML tags variable descriptions. Defaults TRUE. import_id Logical. TRUE, use Qualtrics import IDs instead question IDs column names. Defaults FALSE. time_zone String. local timezone determine response date values. Defaults NULL corresponds UTC time. See \"Dates Times\" Qualtrics information format. legacy Logical. TRUE, import \"legacy\" format CSV files (2017). Defaults FALSE. add_column_map Logical. TRUE, column map data frame added attribute main response data frame. column map captures Qualtrics-provided metadata associated response download, item description internal ID's. Defaults TRUE. add_var_labels Logical. TRUE, item description variable (equivalent one column map) added \"label\" attribute using sjlabelled::set_label(). Useful reference well cross-compatibility stats packages (e.g., Stata, see documentation sjlabelled). Defaults TRUE. col_types Optional. argument provides way manually overwrite column types may incorrectly guessed. Takes readr::cols() specification. See example readr::cols() formatting details. Defaults NULL.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/read_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSV file exported from Qualtrics — read_survey","text":"data frame. Variable labels stored attributes. printed console visibile RStudio viewer.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/read_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CSV file exported from Qualtrics — read_survey","text":"","code":"if (FALSE) { # Generic use of read_survey() df <- read_survey(\"<YOUR-PATH-TO-CSV-FILE>\") } # Example using current data format file <- system.file(\"extdata\", \"sample.csv\", package = \"qualtRics\") df <- read_survey(file) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   .default = col_double(), #>   StartDate = col_datetime(format = \"\"), #>   EndDate = col_datetime(format = \"\"), #>   IPAddress = col_character(), #>   RecordedDate = col_datetime(format = \"\"), #>   ResponseId = col_character(), #>   RecipientLastName = col_logical(), #>   RecipientFirstName = col_logical(), #>   RecipientEmail = col_logical(), #>   ExternalReference = col_logical(), #>   DistributionChannel = col_character(), #>   UserLanguage = col_character(), #>   Q2 = col_character(), #>   `Q2 - Topics` = col_logical() #> ) #> ℹ Use `spec()` for the full column specifications.  # Example using legacy data format file <- system.file(\"extdata\", \"sample_legacy.csv\", package = \"qualtRics\") df <- read_survey(file, legacy = TRUE) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   V1 = col_character(), #>   V2 = col_character(), #>   V3 = col_character(), #>   V4 = col_logical(), #>   V5 = col_logical(), #>   V6 = col_character(), #>   V7 = col_double(), #>   V8 = col_datetime(format = \"\"), #>   V9 = col_datetime(format = \"\"), #>   V10 = col_double(), #>   Q1 = col_double(), #>   Q2 = col_character(), #>   LocationLatitude = col_double(), #>   LocationLongitude = col_double(), #>   LocationAccuracy = col_double() #> )  # Example changing column type file <- system.file(\"extdata\", \"sample.csv\", package = \"qualtRics\") # Force EndDate to be a string df <- read_survey(file, col_types = readr::cols(EndDate = readr::col_character()))"},{"path":"https://docs.ropensci.org/qualtRics/reference/survey_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a data frame containing question IDs and labels — survey_questions","title":"Retrieve a data frame containing question IDs and labels — survey_questions","text":"Retrieve data frame containing question IDs labels","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/survey_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a data frame containing question IDs and labels — survey_questions","text":"","code":"survey_questions(surveyID)"},{"path":"https://docs.ropensci.org/qualtRics/reference/survey_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a data frame containing question IDs and labels — survey_questions","text":"surveyID string. Unique ID survey want download. Returned id all_surveys function.","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/survey_questions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a data frame containing question IDs and labels — survey_questions","text":"request Qualtrics API made function fails, request retried. see failures 500 error (504 error) patient request retried; typically succeed retrying. see types errors, retrying unlikely help.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/reference/survey_questions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a data frame containing question IDs and labels — survey_questions","text":"","code":"if (FALSE) { # Register your Qualtrics credentials if you haven't already qualtrics_api_credentials(   api_key = \"<YOUR-API-KEY>\",   base_url = \"<YOUR-BASE-URL>\" )  # Retrieve a list of surveys surveys <- all_surveys()  # Retrieve questions for a survey questions <- survey_questions(surveyID = surveys$id[6])  # Retrieve a single survey, filtering for specific questions mysurvey <- fetch_survey(   surveyID = surveys$id[6],   save_dir = tempdir(),   include_questions = c(\"QID1\", \"QID2\", \"QID3\"),   verbose = TRUE ) }"},{"path":"https://docs.ropensci.org/qualtRics/reference/wrapper_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multiple choice questions to ordered factors — wrapper_mc","title":"Convert multiple choice questions to ordered factors — wrapper_mc","text":"Convert multiple choice questions ordered factors","code":""},{"path":"https://docs.ropensci.org/qualtRics/reference/wrapper_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multiple choice questions to ordered factors — wrapper_mc","text":"","code":"wrapper_mc(data, question_meta)"},{"path":"https://docs.ropensci.org/qualtRics/reference/wrapper_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multiple choice questions to ordered factors — wrapper_mc","text":"data Imported Qualtrics survey question_meta Question metadata","code":""},{"path":[]},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-320","dir":"Changelog","previous_headings":"","what":"qualtRics 3.2.0","title":"qualtRics 3.2.0","text":"CRAN release: 2024-01-24 Changed multiple choice questions mapped R factor convert argument fetch_survey(), now excluding NA factor level (#315) Deprecated save_dir force_request arguments fetch_survey(), survey response downloads longer cached; calls fetch_survey() now always query Qualtrics API (#317) Added new tmp_dir argument fetch_survey() users can specify survey results briefly stored disk (#327)","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-317","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.7","title":"qualtRics 3.1.7","text":"CRAN release: 2022-11-18 Refactored code checking arguments errors, thanks @jmobrien (#263) Fixed bug fetch_survey() include_* = NA, thanks @jmobrien (#277) Updated test fixture new version vcr","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-316","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.6","title":"qualtRics 3.1.6","text":"CRAN release: 2022-06-06 Add fetch_distribution_history() list_distribution_links() handling distribution data, thanks @chrisumphlett @dsen6644 (#221, #239) Changed handling literal \"NA\" text input users longer converted R NA value thanks @jmobrien (#244) Use httr::RETRY() instead httr::VERB() qualtrics_api_request() implement consistent API error-handling across functions package. retried 3 times non-4xx error. Thanks @chrisumphlett (#217) Update fetch_distributions() changes Qualtrics API, thanks @chrisumphlett (#250)","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-315","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.5","title":"qualtRics 3.1.5","text":"CRAN release: 2021-09-14 Add fetch_description() download complete survey description metadata v3 API endpoint (--date older metadata()) thanks @jmobrien (#207) Warn users possible incorrect results API breakout_sets label FALSE Refactor internal URL creation API calls thanks @jmobrien (#225) Add fetch_id() return surveyID based unique survey name appears Qualtrics UI thanks @markjrieke (#230).","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-314","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.4","title":"qualtRics 3.1.4","text":"CRAN release: 2021-01-14 Add fetch_distributions() access distribution data specific survey thanks @dsen6644 (#169) Handle mailing list embedded data better thanks @dsen6644 (#175) Updated links API documentation Create unique column names questions using choiceId thanks @lyh970817 (#182) Fix bug include_questions contains one QID thanks @lyh970817 (#197) Generate correct/updated column mapping survey responses thanks @jmobrien (#199). column mappings available attribute survey results via new extract_colmap() function.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-313","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.3","title":"qualtRics 3.1.3","text":"CRAN release: 2020-05-22 Update include_questions argument use correct name API request. Build API payloads jsonlite (#155) thanks @jmobrien Convert tests webmockr vcr (#140 #161) thanks @shaun-jacks @dsen6644 Allow user specify column types fetch_survey() read_survey() (#162) thanks @jntrcs","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-312","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.2","title":"qualtRics 3.1.2","text":"CRAN release: 2020-02-24 empty surveys, return zero row dataframe (#127) Remove unnecessary dependency yaml deprecate qualtRicsConfigFile(), avoid unexpected behavior Deprecate old versions functions: getSurveys(), getSurveyQuestions(), getSurvey(), readSurvey() Move updated version Qualtrics API (#130) thanks @jmobrien Correctly handle time zone conversions (#137) thanks @jmobrien Add breakout_sets parameter thanks @shaun-jacks Fix bug infer_data_types() answers choices include HTML Deprecate last_response argument longer used API (#153)","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-311","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.1","title":"qualtRics 3.1.1","text":"CRAN release: 2019-09-23 Fix bug infer_data_types() avoid errors factors/numeric values Improvements documentation, error checking Allow user access column mapping questions IDs (#115) Deprecate registerOptions() avoid unexpected behavior options Make data import robust condition error checking, well better defaults","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-310","dir":"Changelog","previous_headings":"","what":"qualtRics 3.1.0","title":"qualtRics 3.1.0","text":"CRAN release: 2019-04-12 New maintainer: Julia Silge Add previous contributors DESCRIPTION ctb Declare testthat dependency DESCRIPTION (reason previous archiving CRAN) Simpler approach storing API credentials environment variables qualtrics_api_credentials() (registerOptions() now soft deprecated warning) Simplify README (keep existing detailed workflow documentation vignette) Relicense GPL-3 MIT. See consent authors . Improvements documentation throughout all_surveys() (old version getSurveys()) survey_questions() (old version getSurveyQuestions()) fetch_survey() (old version getSurvey()) read_survey() (old version readSurvey())","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-30-2018-02-03","dir":"Changelog","previous_headings":"","what":"qualtRics 3.0 (2018-02-03)","title":"qualtRics 3.0 (2018-02-03)","text":"CRAN release: 2018-02-05","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"new-features-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"qualtRics 3.0 (2018-02-03)","text":"Added ‘metadata’ function allows user retrieve detailed metadata survey. User can now convert specific question types automatically. See page information.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"minor-improvements-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"qualtRics 3.0 (2018-02-03)","text":"Using package httptest mock API requests API calls can tested. getSurveys() getSurveyQuestions() now return tibble","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"bug-fixes-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"qualtRics 3.0 (2018-02-03)","text":"Added .onDetach conditions environment variables (root url API key) removed package unloaded. prevents issues user decides load package . found surveys use new lines questions break readSurvey function. problem , read.csv (read.table well readr library implementation) ignore quote = “\"” option skip = 2 skip = 3 parameter set. result read function slices questions row somewhere middle first importing just table body using skip.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"deprecated-and-defunct-3-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"qualtRics 3.0 (2018-02-03)","text":"convertstandardcolumns deprecated since readr::read_csv automagically. changed config file ‘convertvariables’.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-22-2017-10-27","dir":"Changelog","previous_headings":"","what":"qualtRics 2.2 (2017-10-27)","title":"qualtRics 2.2 (2017-10-27)","text":"CRAN release: 2017-10-27 readSurvey() now takes additional argument, fileEncoding, user can import surveys using specific encoding. ‘fileEncoding’ can also passed optional argument getSurvey(). Added new parameter reads legacy data format. Better argument checking. getSurveyQuestions() now returns additional information. h/t @phoebewong Fixes several bugs stability issues informative error messages","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-20-2017-06-16","dir":"Changelog","previous_headings":"","what":"qualtRics 2.0 (2017-06-16)","title":"qualtRics 2.0 (2017-06-16)","text":"CRAN release: 2017-06-16 registerOptions() now takes arguments. User can now set global options. See qualtRicsConfigFile() information. options now passed ... specific functions. Added appveyor testing. Added support configuration file store API key root url working directory. registerApiKey() replaced registerOptions(). function stores user’s API key root url. Function also scans configuration file .qualtRics.yml contains information. Added new script called zzz.R. package loaded, .onLoad() function file scans working directory .qualtRics.yml configuration file user doesn’t register information manually. Added new function qualtRicsConfigFile() prints instructions user set configuration file R Console. Removed root_url parameter functions required . Dates now converted without specific timezone. Added new function getSurveyQuestions() allows user download data frame containing question labels IDs. Added parameter includedQuestionIds user can select questions want download. Need use QID value getSurveyQuestions(). Updated examples documentation functions. seenUnansweredRecode: String. Recode seen unanswered questions string value. limit: Integer. Maximum number responses exported. Defaults NULL (responses). useLocalTime: Boolean. Use local timezone determine response date values. getSurveys() now retrieves > 100 results.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-10-2016-10-13","dir":"Changelog","previous_headings":"","what":"qualtRics 1.0 (2016-10-13)","title":"qualtRics 1.0 (2016-10-13)","text":"CRAN release: 2017-04-26 Added new function readSurvey(). function used getSurvey() function also work surveys downloaded manually Qualtrics. Standard columns (completed survey/startDate/endDate etc.) now converted proper data types. HT Adrian Brugger & Stefan Borer. User can download surveys CSV format, longer XML JSON. LastResponseId: used, responses filled later ID downloaded. UseLabels: TRUE, download contain character labels. Else, download contain choice labels. StartDate: download responses date. EndDate: download responses date. Survey downloads faster now; getSurvey() longer sleeps checking download status. Also added progress bar.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-003-beta","dir":"Changelog","previous_headings":"","what":"qualtRics 0.03 [beta]","title":"qualtRics 0.03 [beta]","text":"User can choose save results directly folder ‘save_dir’ parameter getSurvey() Results can now requested .csv, .json .xml format. packages jsonlite XML added ‘Suggests’ DESCRIPTION. constructHeader() now deprecated longer used. Instead, users need call registerApiKey(). Added new function registerApiKey() saves user’s API key header information tempdir() environment.","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-002-beta","dir":"Changelog","previous_headings":"","what":"qualtRics 0.02 [beta]","title":"qualtRics 0.02 [beta]","text":"Renamed ‘base url’ ‘root url’ corresponds Qualtrics documentation. root url longer requires API-specific endpoints. e.g. ‘https://leidenuniv.eu.qualtrics.com’ now works functions. API-specific endpoints added functions . Institution-specific root url now required getSurvey()","code":""},{"path":"https://docs.ropensci.org/qualtRics/news/index.html","id":"qualtrics-001-beta","dir":"Changelog","previous_headings":"","what":"qualtRics 0.01 [beta]","title":"qualtRics 0.01 [beta]","text":"Added first three functions (constructHeader, getSurvey, getSurveyIDs) base_url parameter now uniform across functions. Parameter called ‘root url’ bring line Qualtrics documentation.","code":""}]
